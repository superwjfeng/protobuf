// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: find_one_contact_response.proto

#include "find_one_contact_response.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace find_one_contact_resp {
PROTOBUF_CONSTEXPR FindOneContactResponse_Phone::FindOneContactResponse_Phone(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.number_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindOneContactResponse_PhoneDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindOneContactResponse_PhoneDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindOneContactResponse_PhoneDefaultTypeInternal() {}
  union {
    FindOneContactResponse_Phone _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindOneContactResponse_PhoneDefaultTypeInternal _FindOneContactResponse_Phone_default_instance_;
PROTOBUF_CONSTEXPR FindOneContactResponse_RemarkEntry_DoNotUse::FindOneContactResponse_RemarkEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct FindOneContactResponse_RemarkEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindOneContactResponse_RemarkEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindOneContactResponse_RemarkEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FindOneContactResponse_RemarkEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindOneContactResponse_RemarkEntry_DoNotUseDefaultTypeInternal _FindOneContactResponse_RemarkEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR FindOneContactResponse::FindOneContactResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.phone_)*/{}
  , /*decltype(_impl_.remark_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.uid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_resp_)*/nullptr
  , /*decltype(_impl_.age_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindOneContactResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindOneContactResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindOneContactResponseDefaultTypeInternal() {}
  union {
    FindOneContactResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindOneContactResponseDefaultTypeInternal _FindOneContactResponse_default_instance_;
}  // namespace find_one_contact_resp
static ::_pb::Metadata file_level_metadata_find_5fone_5fcontact_5fresponse_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_find_5fone_5fcontact_5fresponse_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_find_5fone_5fcontact_5fresponse_2eproto = nullptr;

const uint32_t TableStruct_find_5fone_5fcontact_5fresponse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse_Phone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse_Phone, _impl_.number_),
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse_Phone, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse_RemarkEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse_RemarkEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse_RemarkEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse_RemarkEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse, _impl_.base_resp_),
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse, _impl_.uid_),
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse, _impl_.age_),
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse, _impl_.phone_),
  PROTOBUF_FIELD_OFFSET(::find_one_contact_resp::FindOneContactResponse, _impl_.remark_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::find_one_contact_resp::FindOneContactResponse_Phone)},
  { 8, 16, -1, sizeof(::find_one_contact_resp::FindOneContactResponse_RemarkEntry_DoNotUse)},
  { 18, -1, -1, sizeof(::find_one_contact_resp::FindOneContactResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::find_one_contact_resp::_FindOneContactResponse_Phone_default_instance_._instance,
  &::find_one_contact_resp::_FindOneContactResponse_RemarkEntry_DoNotUse_default_instance_._instance,
  &::find_one_contact_resp::_FindOneContactResponse_default_instance_._instance,
};

const char descriptor_table_protodef_find_5fone_5fcontact_5fresponse_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037find_one_contact_response.proto\022\025find_"
  "one_contact_resp\032\023base_response.proto\"\263\003"
  "\n\026FindOneContactResponse\022.\n\tbase_resp\030\001 "
  "\001(\0132\033.base_response.BaseResponse\022\013\n\003uid\030"
  "\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\013\n\003age\030\004 \001(\005\022B\n\005phon"
  "e\030\005 \003(\01323.find_one_contact_resp.FindOneC"
  "ontactResponse.Phone\022I\n\006remark\030\006 \003(\01329.f"
  "ind_one_contact_resp.FindOneContactRespo"
  "nse.RemarkEntry\032\202\001\n\005Phone\022\016\n\006number\030\001 \001("
  "\t\022K\n\004type\030\002 \001(\0162=.find_one_contact_resp."
  "FindOneContactResponse.Phone.PhoneType\"\034"
  "\n\tPhoneType\022\006\n\002MP\020\000\022\007\n\003TEL\020\001\032-\n\013RemarkEn"
  "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001b\006pro"
  "to3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_deps[1] = {
  &::descriptor_table_base_5fresponse_2eproto,
};
static ::_pbi::once_flag descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_find_5fone_5fcontact_5fresponse_2eproto = {
    false, false, 523, descriptor_table_protodef_find_5fone_5fcontact_5fresponse_2eproto,
    "find_one_contact_response.proto",
    &descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_once, descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_deps, 1, 3,
    schemas, file_default_instances, TableStruct_find_5fone_5fcontact_5fresponse_2eproto::offsets,
    file_level_metadata_find_5fone_5fcontact_5fresponse_2eproto, file_level_enum_descriptors_find_5fone_5fcontact_5fresponse_2eproto,
    file_level_service_descriptors_find_5fone_5fcontact_5fresponse_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_getter() {
  return &descriptor_table_find_5fone_5fcontact_5fresponse_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_find_5fone_5fcontact_5fresponse_2eproto(&descriptor_table_find_5fone_5fcontact_5fresponse_2eproto);
namespace find_one_contact_resp {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FindOneContactResponse_Phone_PhoneType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_find_5fone_5fcontact_5fresponse_2eproto);
  return file_level_enum_descriptors_find_5fone_5fcontact_5fresponse_2eproto[0];
}
bool FindOneContactResponse_Phone_PhoneType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr FindOneContactResponse_Phone_PhoneType FindOneContactResponse_Phone::MP;
constexpr FindOneContactResponse_Phone_PhoneType FindOneContactResponse_Phone::TEL;
constexpr FindOneContactResponse_Phone_PhoneType FindOneContactResponse_Phone::PhoneType_MIN;
constexpr FindOneContactResponse_Phone_PhoneType FindOneContactResponse_Phone::PhoneType_MAX;
constexpr int FindOneContactResponse_Phone::PhoneType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class FindOneContactResponse_Phone::_Internal {
 public:
};

FindOneContactResponse_Phone::FindOneContactResponse_Phone(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:find_one_contact_resp.FindOneContactResponse.Phone)
}
FindOneContactResponse_Phone::FindOneContactResponse_Phone(const FindOneContactResponse_Phone& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindOneContactResponse_Phone* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.number_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_number().empty()) {
    _this->_impl_.number_.Set(from._internal_number(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:find_one_contact_resp.FindOneContactResponse.Phone)
}

inline void FindOneContactResponse_Phone::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.number_){}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindOneContactResponse_Phone::~FindOneContactResponse_Phone() {
  // @@protoc_insertion_point(destructor:find_one_contact_resp.FindOneContactResponse.Phone)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindOneContactResponse_Phone::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.number_.Destroy();
}

void FindOneContactResponse_Phone::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindOneContactResponse_Phone::Clear() {
// @@protoc_insertion_point(message_clear_start:find_one_contact_resp.FindOneContactResponse.Phone)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.number_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindOneContactResponse_Phone::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_number();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "find_one_contact_resp.FindOneContactResponse.Phone.number"));
        } else
          goto handle_unusual;
        continue;
      // .find_one_contact_resp.FindOneContactResponse.Phone.PhoneType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::find_one_contact_resp::FindOneContactResponse_Phone_PhoneType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindOneContactResponse_Phone::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:find_one_contact_resp.FindOneContactResponse.Phone)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string number = 1;
  if (!this->_internal_number().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_number().data(), static_cast<int>(this->_internal_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "find_one_contact_resp.FindOneContactResponse.Phone.number");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_number(), target);
  }

  // .find_one_contact_resp.FindOneContactResponse.Phone.PhoneType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:find_one_contact_resp.FindOneContactResponse.Phone)
  return target;
}

size_t FindOneContactResponse_Phone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:find_one_contact_resp.FindOneContactResponse.Phone)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string number = 1;
  if (!this->_internal_number().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_number());
  }

  // .find_one_contact_resp.FindOneContactResponse.Phone.PhoneType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindOneContactResponse_Phone::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindOneContactResponse_Phone::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindOneContactResponse_Phone::GetClassData() const { return &_class_data_; }


void FindOneContactResponse_Phone::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindOneContactResponse_Phone*>(&to_msg);
  auto& from = static_cast<const FindOneContactResponse_Phone&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:find_one_contact_resp.FindOneContactResponse.Phone)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_number().empty()) {
    _this->_internal_set_number(from._internal_number());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindOneContactResponse_Phone::CopyFrom(const FindOneContactResponse_Phone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:find_one_contact_resp.FindOneContactResponse.Phone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindOneContactResponse_Phone::IsInitialized() const {
  return true;
}

void FindOneContactResponse_Phone::InternalSwap(FindOneContactResponse_Phone* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.number_, lhs_arena,
      &other->_impl_.number_, rhs_arena
  );
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindOneContactResponse_Phone::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_getter, &descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_once,
      file_level_metadata_find_5fone_5fcontact_5fresponse_2eproto[0]);
}

// ===================================================================

FindOneContactResponse_RemarkEntry_DoNotUse::FindOneContactResponse_RemarkEntry_DoNotUse() {}
FindOneContactResponse_RemarkEntry_DoNotUse::FindOneContactResponse_RemarkEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FindOneContactResponse_RemarkEntry_DoNotUse::MergeFrom(const FindOneContactResponse_RemarkEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FindOneContactResponse_RemarkEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_getter, &descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_once,
      file_level_metadata_find_5fone_5fcontact_5fresponse_2eproto[1]);
}

// ===================================================================

class FindOneContactResponse::_Internal {
 public:
  static const ::base_response::BaseResponse& base_resp(const FindOneContactResponse* msg);
};

const ::base_response::BaseResponse&
FindOneContactResponse::_Internal::base_resp(const FindOneContactResponse* msg) {
  return *msg->_impl_.base_resp_;
}
void FindOneContactResponse::clear_base_resp() {
  if (GetArenaForAllocation() == nullptr && _impl_.base_resp_ != nullptr) {
    delete _impl_.base_resp_;
  }
  _impl_.base_resp_ = nullptr;
}
FindOneContactResponse::FindOneContactResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &FindOneContactResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:find_one_contact_resp.FindOneContactResponse)
}
FindOneContactResponse::FindOneContactResponse(const FindOneContactResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindOneContactResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.phone_){from._impl_.phone_}
    , /*decltype(_impl_.remark_)*/{}
    , decltype(_impl_.uid_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.base_resp_){nullptr}
    , decltype(_impl_.age_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.remark_.MergeFrom(from._impl_.remark_);
  _impl_.uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    _this->_impl_.uid_.Set(from._internal_uid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base_resp()) {
    _this->_impl_.base_resp_ = new ::base_response::BaseResponse(*from._impl_.base_resp_);
  }
  _this->_impl_.age_ = from._impl_.age_;
  // @@protoc_insertion_point(copy_constructor:find_one_contact_resp.FindOneContactResponse)
}

inline void FindOneContactResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.phone_){arena}
    , /*decltype(_impl_.remark_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.uid_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.base_resp_){nullptr}
    , decltype(_impl_.age_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindOneContactResponse::~FindOneContactResponse() {
  // @@protoc_insertion_point(destructor:find_one_contact_resp.FindOneContactResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void FindOneContactResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.phone_.~RepeatedPtrField();
  _impl_.remark_.Destruct();
  _impl_.remark_.~MapField();
  _impl_.uid_.Destroy();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_resp_;
}

void FindOneContactResponse::ArenaDtor(void* object) {
  FindOneContactResponse* _this = reinterpret_cast< FindOneContactResponse* >(object);
  _this->_impl_.remark_.Destruct();
}
void FindOneContactResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindOneContactResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:find_one_contact_resp.FindOneContactResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.phone_.Clear();
  _impl_.remark_.Clear();
  _impl_.uid_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_resp_ != nullptr) {
    delete _impl_.base_resp_;
  }
  _impl_.base_resp_ = nullptr;
  _impl_.age_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindOneContactResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .base_response.BaseResponse base_resp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base_resp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_uid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "find_one_contact_resp.FindOneContactResponse.uid"));
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "find_one_contact_resp.FindOneContactResponse.name"));
        } else
          goto handle_unusual;
        continue;
      // int32 age = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.age_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .find_one_contact_resp.FindOneContactResponse.Phone phone = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_phone(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> remark = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.remark_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindOneContactResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:find_one_contact_resp.FindOneContactResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .base_response.BaseResponse base_resp = 1;
  if (this->_internal_has_base_resp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base_resp(this),
        _Internal::base_resp(this).GetCachedSize(), target, stream);
  }

  // string uid = 2;
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "find_one_contact_resp.FindOneContactResponse.uid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uid(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "find_one_contact_resp.FindOneContactResponse.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // int32 age = 4;
  if (this->_internal_age() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_age(), target);
  }

  // repeated .find_one_contact_resp.FindOneContactResponse.Phone phone = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_phone_size()); i < n; i++) {
    const auto& repfield = this->_internal_phone(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // map<string, string> remark = 6;
  if (!this->_internal_remark().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = FindOneContactResponse_RemarkEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_remark();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "find_one_contact_resp.FindOneContactResponse.RemarkEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "find_one_contact_resp.FindOneContactResponse.RemarkEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:find_one_contact_resp.FindOneContactResponse)
  return target;
}

size_t FindOneContactResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:find_one_contact_resp.FindOneContactResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .find_one_contact_resp.FindOneContactResponse.Phone phone = 5;
  total_size += 1UL * this->_internal_phone_size();
  for (const auto& msg : this->_impl_.phone_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, string> remark = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_remark_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_remark().begin();
      it != this->_internal_remark().end(); ++it) {
    total_size += FindOneContactResponse_RemarkEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string uid = 2;
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .base_response.BaseResponse base_resp = 1;
  if (this->_internal_has_base_resp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_resp_);
  }

  // int32 age = 4;
  if (this->_internal_age() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_age());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindOneContactResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindOneContactResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindOneContactResponse::GetClassData() const { return &_class_data_; }


void FindOneContactResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindOneContactResponse*>(&to_msg);
  auto& from = static_cast<const FindOneContactResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:find_one_contact_resp.FindOneContactResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.phone_.MergeFrom(from._impl_.phone_);
  _this->_impl_.remark_.MergeFrom(from._impl_.remark_);
  if (!from._internal_uid().empty()) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_base_resp()) {
    _this->_internal_mutable_base_resp()->::base_response::BaseResponse::MergeFrom(
        from._internal_base_resp());
  }
  if (from._internal_age() != 0) {
    _this->_internal_set_age(from._internal_age());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindOneContactResponse::CopyFrom(const FindOneContactResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:find_one_contact_resp.FindOneContactResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindOneContactResponse::IsInitialized() const {
  return true;
}

void FindOneContactResponse::InternalSwap(FindOneContactResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.phone_.InternalSwap(&other->_impl_.phone_);
  _impl_.remark_.InternalSwap(&other->_impl_.remark_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uid_, lhs_arena,
      &other->_impl_.uid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindOneContactResponse, _impl_.age_)
      + sizeof(FindOneContactResponse::_impl_.age_)
      - PROTOBUF_FIELD_OFFSET(FindOneContactResponse, _impl_.base_resp_)>(
          reinterpret_cast<char*>(&_impl_.base_resp_),
          reinterpret_cast<char*>(&other->_impl_.base_resp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindOneContactResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_getter, &descriptor_table_find_5fone_5fcontact_5fresponse_2eproto_once,
      file_level_metadata_find_5fone_5fcontact_5fresponse_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace find_one_contact_resp
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::find_one_contact_resp::FindOneContactResponse_Phone*
Arena::CreateMaybeMessage< ::find_one_contact_resp::FindOneContactResponse_Phone >(Arena* arena) {
  return Arena::CreateMessageInternal< ::find_one_contact_resp::FindOneContactResponse_Phone >(arena);
}
template<> PROTOBUF_NOINLINE ::find_one_contact_resp::FindOneContactResponse_RemarkEntry_DoNotUse*
Arena::CreateMaybeMessage< ::find_one_contact_resp::FindOneContactResponse_RemarkEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::find_one_contact_resp::FindOneContactResponse_RemarkEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::find_one_contact_resp::FindOneContactResponse*
Arena::CreateMaybeMessage< ::find_one_contact_resp::FindOneContactResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::find_one_contact_resp::FindOneContactResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
